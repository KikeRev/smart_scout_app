## docker-compose.yml
# This file is part of the Smart Scout App project.
# It defines the services, networks, and volumes used in the Docker setup.

x-networks: &default_networks
  networks:
    - scouting-net

services:
      
  # ==================== CORE ====================
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scouting-api
    command: >-
      uvicorn apps.agent_service.main:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - ./:/app 
      - ./media:/app/media
      - ./media_data:/app/media_data 
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_BASE: ${OPENAI_API_BASE}
      OPENAI_MODEL: ${OPENAI_MODEL}
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      DATABASE_URL: postgresql+psycopg2://scout:scout@db:5432/scouting
      REDIS_URL: redis://redis:6379/0
      DASHBOARD_HOST: http://web:8000
      
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    <<: *default_networks


  ingestion:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scouting-ingestion
    command: python apps/ingestion/worker.py  # ajusta al script real
    volumes:
      - ./:/app
      - ./media:/app/media
      - ./media_data:/app/media_data
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_BASE: ${OPENAI_API_BASE}
      OPENAI_MODEL: ${OPENAI_MODEL}
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      DATABASE_URL: postgresql+psycopg2://scout:scout@db:5432/scouting
    depends_on:
      - db
    <<: *default_networks

  # =============== INFRA ========================
  db:
    image: ankane/pgvector:latest
    #container_name: db
    environment:
      POSTGRES_USER: scout
      POSTGRES_PASSWORD: scout
      POSTGRES_DB: scouting
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    <<: *default_networks

  redis:
    image: redis:7-alpine
    #container_name: redis
    ports:
      - "6379:6379"
    <<: *default_networks

  # =============== DEV PROFILE ==================
  jupyter:
    profiles: ["dev"]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scouting-jupyter
    command: >-
      jupyter lab --ip=0.0.0.0 --port=8888 --allow-root --no-browser --NotebookApp.token=""
    volumes:
      - ./:/app
      - ./notebooks:/notebooks
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_BASE: ${OPENAI_API_BASE}
      OPENAI_MODEL: ${OPENAI_MODEL}
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app
      DATABASE_URL: postgresql+psycopg2://scout:scout@db:5432/scouting
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8888:8888"
    depends_on:
      - db
      - redis
    <<: *default_networks
  web:
    build: .
    container_name: scouting-web
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_API_BASE: ${OPENAI_API_BASE}
      OPENAI_MODEL: ${OPENAI_MODEL}
      DJANGO_SUPERUSER_USERNAME: gobuub
      DJANGO_SUPERUSER_EMAIL: botica1982@msn.com
      DJANGO_SUPERUSER_PASSWORD: 16082016No@
      DATABASE_URL: postgresql+psycopg2://scout:scout@db:5432/scouting
      REDIS_URL: redis://redis:6379/0
      DASHBOARD_HOST: http://localhost:8000
    command: >
        sh -c "python manage.py migrate &&
         python manage.py createsuperuser --no-input ||
         echo 'Superuser already exists' &&
         python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/app
      - ./media:/app/media
      - ./media_data:/app/media_data
    ports:
      - "8000:8000"
    depends_on: [db, redis]
    profiles: ["dev"]
    <<: *default_networks

networks:
  scouting-net:
    driver: bridge

volumes:
  pgdata:
  media: 
  media_data:

